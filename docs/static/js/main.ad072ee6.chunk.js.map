{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setearCategorias","useState","valorInput","setValorInput","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imagenes","useFetchGifs","GifExpertApp","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAEHJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAiB,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC9CN,EAAc,MAWd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAxBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCLjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAcdM,GAdc,4CAAH,sDCDRO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,4CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAEtB,ECAwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OAnBAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACVL,SAAS,SAOlB,CAACpB,IAIGqB,ED1B0BK,CAAa1B,GAAlCyB,EAAZ,EAAOlB,KAAea,EAAtB,EAAsBA,QAEtB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,oBAAf,SAEYS,EAAShB,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAGMA,GAFCA,EAAIC,aEfxBgB,EAAe,WAE5B,MAAoCzC,mBAAS,CAAC,yBAA9C,mBAAOQ,EAAP,KAAmBkC,EAAnB,KAEI,OACI,qCACI,8CAEA,cAAC,EAAD,CAAa3C,iBAAoB2C,IAEjC,uBAEA,6BAEMlC,EAAWe,KAAK,SAAAT,GAAS,OACrB,cAAC,EAAD,CAEEA,UAAaA,GADNA,Y,MCd/B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ad072ee6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setearCategorias} ) => {\r\n\r\n    const [valorInput, setValorInput] = useState('');\r\n\r\n    const valorInputCambia = (e) => {      \r\n        setValorInput(e.target.value);\r\n    }\r\n\r\n    const valorEnviado = (e) => {\r\n        e.preventDefault();\r\n        \r\n    if(valorInput.trim().length > 2){\r\n        setearCategorias(categorias => [valorInput,...categorias]);\r\n        setValorInput('');\r\n    }\r\n\r\n       \r\n\r\n        //console.log('Submit hecho');\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={valorEnviado}>\r\n            <input \r\n                type=\"text\" \r\n                value={valorInput}\r\n                onChange={ valorInputCambia }\r\n            />\r\n        </form>\r\n           \r\n        \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setearCategorias: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n export const getGifs = async (categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=y1ORqegR1ZR5YJbVZkwHJQAVzOxCga5x`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    //console.log( gifs );\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n   \r\n    return (\r\n        <div className='tarjeta animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n   \r\n    const {data:imagenes, loading} = useFetchGifs(categoria);\r\n   \r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{categoria}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n\r\n        <div className=\"contenedor-cartas\">   \r\n            {\r\n                    imagenes.map( (img) => (                       \r\n                          <GifGridItem \r\n                            key={img.id}\r\n\r\n                            {...img}\r\n                          />\r\n                   ))\r\n                }  \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n//import { useEffect } from \"react/cjs/react.development\";\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria)\r\n        .then(imagenes => {\r\n\r\n     \r\n                setState({\r\n                    data: imagenes,\r\n                loading: false\r\n                })\r\n     \r\n\r\n            \r\n        } );//SOLO EJECUTA CUANDO ES RENDERIZADO POR PRIMERA VEZ\r\n\r\n    }, [categoria])\r\n\r\n\r\n\r\n    return state;//{data:[], loading: true};\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\nconst [categorias, setCategorias] = useState(['Categoria precargada']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setearCategorias = {setCategorias} />\r\n\r\n            <hr />           \r\n\r\n            <ol>\r\n                { \r\n                  categorias.map( categoria => (\r\n                      <GifGrid \r\n                        key = {categoria} \r\n                        categoria = {categoria} \r\n                      />\r\n                      //return <li key={categoria}> {categoria} </li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//crear componente GifExpertApp\n"],"sourceRoot":""}